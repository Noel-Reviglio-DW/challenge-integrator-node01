var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.188,1,1.961]],["body/controllers/AppController.html",[0,1.901,1,3.137,2,1.523,3,0.381,4,0.441,5,0.381,6,3.291,7,0.963,8,2.085,9,4.692,10,1.836,11,0.035,12,1.27,13,3.968,14,1.67,15,1.585,16,0.891,17,1.058,18,2.757,19,3.291,20,0.441,21,0.062,22,2.513,23,1.391,24,1.16,25,3.968,26,0.028,27,0.028]],["title/modules/AppModule.html",[28,1.303,29,1.961]],["body/modules/AppModule.html",[1,2.663,2,1.367,3,0.404,4,0.271,5,0.234,11,0.036,16,1.013,17,0.65,18,2.621,19,2.023,20,0.271,21,0.038,23,0.855,26,0.02,27,0.02,28,1.499,29,3.655,30,1.129,31,1.648,32,2.023,33,2.023,34,2.023,35,2.907,36,2.907,37,2.907,38,2.016,39,1.381,40,1.381,41,1.749,42,2.255,43,3.56,44,2.439,45,2.016,46,1.381,47,2.439,48,1.749,49,3.016,50,2.953,51,2.439,52,2.439,53,2.439,54,2.439,55,1.245,56,1.749,57,2.023,58,3.526,59,2.953,60,2.023,61,2.023,62,2.023,63,2.023,64,2.023,65,2.023,66,2.023,67,1.749,68,2.016,69,2.023,70,2.023,71,2.023,72,2.139,73,3.488,74,3.488,75,3.488,76,2.023,77,3.488,78,2.023,79,2.953,80,2.023,81,2.023,82,1.545,83,2.023,84,2.023,85,2.023,86,2.439,87,2.439,88,2.439,89,2.439,90,1.381,91,1.027,92,1.545,93,1.381,94,1.381,95,2.439,96,2.439]],["title/injectables/AppService.html",[18,1.581,97,1.188]],["body/injectables/AppService.html",[3,0.399,4,0.463,5,0.399,7,1.009,8,2.147,9,4.77,11,0.035,12,1.331,14,1.751,15,1.632,16,0.748,17,1.109,18,2.604,20,0.463,21,0.065,24,1.215,26,0.029,27,0.029,97,1.958,98,2.355,99,3.45,100,4.159,101,4.159,102,4.159]],["title/classes/Client.html",[21,0.048,103,1.753]],["body/classes/Client.html",[3,0.264,4,0.306,5,0.264,7,0.667,10,2.543,11,0.035,12,1.759,15,1.851,16,0.495,20,0.306,21,0.043,23,2.166,26,0.022,27,0.022,68,1.557,91,1.634,103,2.198,104,0.964,105,2.281,106,1.981,107,3.225,108,3.225,109,3.225,110,1.893,111,3.225,112,3.225,113,3.225,114,1.759,115,2.783,116,3.94,117,2.75,118,1.972,119,2.75,120,1.972,121,2.75,122,2.281,123,2.75,124,1.972,125,2.75,126,1.972,127,2.75,128,1.972,129,2.75,130,4.024,131,1.557,132,2.281,133,1.972,134,1.972,135,1.972,136,1.972,137,1.972,138,1.972]],["title/controllers/ClientController.html",[0,1.188,139,1.961]],["body/controllers/ClientController.html",[0,0.756,2,0.444,3,0.111,4,0.129,5,0.111,7,0.281,8,0.829,10,1.573,11,0.035,12,1.184,14,2.268,15,1.653,16,0.807,17,0.309,20,0.129,21,0.018,22,0.733,23,0.69,24,1.266,26,0.011,27,0.011,48,0.83,49,1.412,50,0.96,55,0.591,58,1.843,72,1.573,82,2.84,91,1.082,93,0.655,103,3.365,110,2.078,114,1.631,131,0.655,139,1.247,140,0.96,141,1.514,142,1.312,143,1.005,144,1.005,145,2.211,146,1.969,147,0.96,148,1.888,149,1.157,150,1.157,151,1.157,152,1.888,153,1.888,154,1.888,155,3.832,156,1.969,157,1.157,158,5.387,159,4.332,160,1.157,161,4.485,162,1.157,163,1.157,164,1.157,165,3.832,166,1.633,167,3.032,168,2.094,169,0.591,170,1.157,171,1.157,172,1.157,173,2.652,174,0.591,175,1.157,176,2.498,177,1.969,178,3.032,179,1.157,180,3.032,181,4.619,182,1.969,183,1.969,184,0.591,185,2.352,186,1.157,187,1.157,188,1.969,189,1.969,190,4.485,191,4.332,192,1.157,193,1.157,194,1.412,195,2.652,196,0.83,197,2.829,198,2.57,199,0.487,200,1.157,201,1.969,202,2.57,203,3.698,204,2.57,205,1.157,206,0.83,207,0.83,208,1.157,209,2.132,210,1.005,211,0.96,212,0.96,213,0.591,214,1.412,215,0.591,216,1.157,217,0.96,218,0.96,219,1.157,220,1.157,221,3.399,222,2.57,223,1.633,224,3.032,225,1.157,226,1.969,227,3.032,228,3.032,229,1.969,230,1.969,231,1.969,232,1.969,233,1.969,234,1.969,235,0.83,236,0.83,237,1.157,238,1.969,239,0.83,240,1.157,241,0.83,242,1.969,243,0.83,244,1.157,245,0.83,246,0.83,247,1.157,248,1.969,249,1.969,250,1.157,251,0.96,252,1.157,253,1.157,254,1.157,255,1.157]],["title/modules/ClientModule.html",[28,1.303,35,1.753]],["body/modules/ClientModule.html",[2,1.67,3,0.312,4,0.361,5,0.312,11,0.036,16,0.983,17,0.866,20,0.361,21,0.05,24,0.949,26,0.024,27,0.024,28,1.832,30,1.503,31,2.014,35,3.186,38,2.464,39,1.84,40,1.84,42,2.756,45,2.779,46,1.84,55,2.222,90,1.84,94,1.84,139,3.108,168,1.84,199,1.368,210,2.872,211,2.695,256,2.695,257,2.695,258,2.33,259,2.756,260,2.33,261,2.756,262,1.503,263,3.248,264,2.464,265,2.057,266,2.057,267,2.057,268,2.057,269,2.057,270,2.057,271,2.695,272,2.695,273,2.057]],["title/injectables/ClientService.html",[97,1.188,210,1.581]],["body/injectables/ClientService.html",[3,0.213,4,0.247,5,0.213,7,0.538,8,1.397,11,0.035,12,1.646,14,1.989,15,1.273,16,0.892,17,0.591,20,0.247,21,0.034,23,0.777,24,1.381,26,0.019,27,0.019,72,1.84,91,2.088,92,2.101,93,2.499,97,1.274,98,1.255,103,3.117,106,1.694,110,2.226,114,1.513,141,1.526,142,1.694,143,1.694,144,2.03,145,2.03,147,2.752,148,2.413,152,2.532,153,2.532,154,2.532,155,4.635,166,1.839,168,1.255,169,1.694,173,1.59,174,1.694,184,1.694,185,2.912,199,0.933,207,1.59,209,3.661,210,1.694,212,1.839,213,1.132,214,2.379,215,1.132,223,1.839,262,1.026,274,1.839,275,2.217,276,3.165,277,3.318,278,3.318,279,2.217,280,3.318,281,2.217,282,2.217,283,2.217,284,2.217,285,1.839,286,3.318,287,2.217,288,4.726,289,4.726,290,2.217,291,2.217,292,2.217,293,2.217,294,2.217,295,2.217]],["title/classes/CreateClientDto.html",[21,0.048,148,1.581]],["body/classes/CreateClientDto.html",[3,0.274,4,0.317,5,0.274,7,0.691,10,2.502,11,0.035,12,1.731,15,1.812,16,0.513,20,0.317,21,0.044,23,2.153,26,0.022,27,0.022,68,1.613,91,1.675,104,0.998,106,2.031,107,3.287,108,3.287,109,3.287,111,3.287,112,3.287,113,3.287,114,1.731,115,2.853,116,3.878,118,2.043,120,2.043,124,2.043,126,2.043,128,2.043,130,3.98,131,1.613,133,2.043,134,2.043,135,2.043,136,2.043,137,2.043,138,2.043,148,2.031,296,4.603,297,2.043,298,2.849,299,2.849,300,2.849,301,2.849,302,2.849,303,2.849]],["title/classes/CreateProjectDto.html",[21,0.048,304,1.581]],["body/classes/CreateProjectDto.html",[3,0.446,4,0.517,5,0.446,11,0.032,20,0.517,21,0.072,26,0.031,27,0.031,104,1.629,304,2.783,305,3.855,306,3.333]],["title/classes/CreateTalentDto.html",[21,0.048,307,1.581]],["body/classes/CreateTalentDto.html",[3,0.446,4,0.517,5,0.446,11,0.032,20,0.517,21,0.072,26,0.031,27,0.031,104,1.629,307,2.783,308,3.855,309,3.333]],["title/classes/Project.html",[21,0.048,310,1.961]],["body/classes/Project.html",[3,0.449,4,0.519,5,0.449,11,0.033,20,0.519,21,0.073,26,0.031,27,0.031,104,1.637,310,3.462,311,3.874]],["title/controllers/ProjectController.html",[0,1.188,312,1.961]],["body/controllers/ProjectController.html",[0,0.99,2,0.99,3,0.248,4,0.287,5,0.248,7,0.626,8,1.56,10,2.326,11,0.035,12,1.609,14,2.116,15,1.798,16,0.854,17,0.687,20,0.287,21,0.04,22,1.633,23,0.903,24,1.469,26,0.021,27,0.021,110,2.203,114,1.519,141,1.423,142,2.422,143,1.892,144,1.892,145,1.892,152,2.422,153,2.422,154,2.422,169,1.316,174,1.316,176,1.633,184,1.316,194,3.112,195,2.658,196,1.849,197,1.849,213,1.316,215,1.316,235,2.658,236,1.849,239,1.849,241,2.658,243,1.849,245,2.658,246,1.849,304,2.422,312,2.347,313,2.138,314,2.138,315,1.46,316,2.138,317,2.578,318,3.074,319,2.578,320,2.578,321,2.578,322,3.935,323,2.687,324,2.578,325,1.892,326,2.138,327,2.658,328,2.578,329,2.578,330,2.578,331,2.578,332,2.578,333,2.578,334,2.578]],["title/modules/ProjectModule.html",[28,1.303,36,1.753]],["body/modules/ProjectModule.html",[2,1.67,3,0.312,4,0.361,5,0.312,11,0.036,16,0.983,17,0.866,20,0.361,21,0.05,24,0.949,26,0.024,27,0.024,28,1.832,30,1.503,31,2.014,36,3.186,38,2.464,39,1.84,40,1.84,42,2.756,45,2.779,46,1.84,55,2.222,90,1.84,94,1.84,199,1.368,259,2.756,260,2.33,261,2.756,262,1.503,264,2.464,265,2.057,266,2.057,267,2.057,268,2.057,269,2.057,270,2.057,273,2.057,312,3.108,315,1.84,325,2.872,326,2.695,335,2.695,336,2.695,337,2.33,338,3.248,339,2.695,340,2.695]],["title/injectables/ProjectService.html",[97,1.188,325,1.581]],["body/injectables/ProjectService.html",[3,0.246,4,0.284,5,0.246,7,0.621,8,1.551,11,0.035,12,1.67,14,2.264,15,1.604,16,0.85,17,0.682,20,0.284,21,0.04,23,0.896,24,1.464,26,0.021,27,0.021,72,1.183,91,2.361,92,2.333,93,1.448,97,1.414,98,1.448,110,2.197,114,1.604,141,1.414,142,2.413,143,1.881,144,1.881,145,1.881,152,2.558,153,2.558,154,2.558,169,1.881,174,1.881,184,1.881,199,1.077,213,1.306,215,1.306,262,1.183,276,3.39,304,2.413,310,2.993,315,1.448,316,3.056,318,2.121,322,3.583,323,2.677,325,1.881,327,2.643,341,2.121,342,2.557,343,2.557,344,3.685,345,2.557,346,2.557,347,2.557,348,2.557,349,2.557,350,2.557,351,4.156,352,2.121,353,2.121,354,2.121]],["title/classes/Talent.html",[21,0.048,355,1.753]],["body/classes/Talent.html",[3,0.449,4,0.519,5,0.449,11,0.033,20,0.519,21,0.073,26,0.031,27,0.031,104,1.637,355,3.096,356,3.874]],["title/controllers/TalentController.html",[0,1.188,357,1.961]],["body/controllers/TalentController.html",[0,0.99,2,0.99,3,0.248,4,0.287,5,0.248,7,0.626,8,1.56,10,2.326,11,0.035,12,1.609,14,2.116,15,1.798,16,0.854,17,0.687,20,0.287,21,0.04,22,1.633,23,0.903,24,1.469,26,0.021,27,0.021,110,2.203,114,1.519,141,1.423,142,2.422,143,1.892,144,1.892,145,1.892,152,2.422,153,2.422,154,2.422,169,1.316,174,1.316,176,1.633,184,1.316,194,3.112,195,2.658,196,1.849,197,1.849,213,1.316,215,1.316,235,2.658,236,1.849,239,1.849,241,2.658,243,1.849,245,2.658,246,1.849,307,2.672,314,2.138,357,2.347,358,2.138,359,1.46,360,2.138,361,2.578,362,2.578,363,2.578,364,2.578,365,3.124,366,2.578,367,1.892,368,2.138,369,2.658,370,2.578,371,2.578,372,2.578,373,2.578,374,2.578,375,2.578,376,2.578]],["title/modules/TalentModule.html",[28,1.303,37,1.753]],["body/modules/TalentModule.html",[2,1.67,3,0.312,4,0.361,5,0.312,11,0.036,16,0.983,17,0.866,20,0.361,21,0.05,24,0.949,26,0.024,27,0.024,28,1.832,30,1.503,31,2.014,37,3.186,38,2.464,39,1.84,40,1.84,42,2.756,45,2.779,46,1.84,55,2.222,90,1.84,94,1.84,199,1.368,259,2.756,260,2.33,261,2.756,262,1.503,264,2.464,265,2.057,266,2.057,267,2.057,268,2.057,269,2.057,270,2.057,273,2.057,357,3.108,359,1.84,367,2.872,368,2.695,377,2.695,378,2.695,379,2.33,380,3.248,381,2.695,382,2.695]],["title/injectables/TalentService.html",[97,1.188,367,1.581]],["body/injectables/TalentService.html",[3,0.246,4,0.284,5,0.246,7,0.621,8,1.551,11,0.035,12,1.67,14,2.264,15,1.604,16,0.85,17,0.682,20,0.284,21,0.04,23,0.896,24,1.464,26,0.021,27,0.021,72,1.183,91,2.361,92,2.333,93,1.448,97,1.414,98,1.448,110,2.197,114,1.604,141,1.414,142,2.413,143,1.881,144,1.881,145,1.881,152,2.558,153,2.558,154,2.558,169,1.881,174,1.881,184,1.881,199,1.077,213,1.306,215,1.306,262,1.183,276,3.39,307,2.558,351,4.156,352,2.121,353,2.121,354,2.121,355,2.677,359,1.448,360,3.056,365,3.046,367,1.881,369,2.643,383,2.121,384,2.557,385,2.557,386,3.685,387,2.557,388,2.557,389,2.557,390,2.557,391,2.557,392,2.557]],["title/classes/UpdateClientDto.html",[21,0.048,185,1.753]],["body/classes/UpdateClientDto.html",[3,0.263,4,0.305,5,0.263,7,0.665,10,2.54,11,0.035,12,1.757,15,1.85,16,0.808,20,0.305,21,0.043,26,0.022,27,0.022,68,1.553,91,1.63,104,0.961,106,1.977,107,3.22,108,3.22,109,3.22,110,1.89,111,3.22,112,3.22,113,3.22,114,1.757,115,2.777,116,3.937,118,1.966,120,1.966,122,2.274,124,1.966,126,1.966,128,1.966,130,4.021,131,1.553,132,2.274,133,1.966,134,1.966,135,1.966,136,1.966,137,1.966,138,1.966,141,1.052,148,1.4,185,2.193,214,1.966,297,1.966,393,4.651,394,2.742,395,2.742,396,2.742,397,2.742,398,2.742,399,2.742,400,2.742,401,1.966,402,1.736,403,1.736,404,1.966,405,2.742]],["title/classes/UpdateProjectDto.html",[21,0.048,323,1.753]],["body/classes/UpdateProjectDto.html",[3,0.418,4,0.484,5,0.418,11,0.034,16,0.943,20,0.484,21,0.068,26,0.029,27,0.029,104,1.524,141,1.67,304,2.221,306,3.119,323,2.968,327,3.119,401,3.119,402,2.755,403,2.755,404,3.119,406,3.608,407,4.35]],["title/classes/UpdateTalentDto.html",[21,0.048,365,1.753]],["body/classes/UpdateTalentDto.html",[3,0.418,4,0.484,5,0.418,11,0.034,16,0.943,20,0.484,21,0.068,26,0.029,27,0.029,104,1.524,141,1.67,307,2.221,309,3.119,365,2.968,369,3.119,401,3.119,402,2.755,403,2.755,404,3.119,408,3.608,409,4.35]],["title/coverage.html",[410,3.022]],["body/coverage.html",[0,1.858,1,1.707,5,0.259,6,2.236,11,0.035,18,1.376,21,0.088,26,0.021,27,0.021,41,1.933,56,1.933,72,1.247,97,1.858,99,2.236,103,1.526,105,2.236,114,0.863,139,1.707,140,2.236,148,1.376,185,1.526,210,1.376,258,1.933,264,2.519,274,2.236,296,2.236,297,2.744,304,1.376,305,2.236,306,2.744,307,1.376,308,2.236,309,2.744,310,1.707,311,2.236,312,1.707,313,2.236,323,1.526,325,1.376,337,1.933,341,2.236,355,1.526,356,2.236,357,1.707,358,2.236,365,1.526,367,1.376,379,1.933,383,2.236,393,2.236,406,2.236,408,2.236,410,1.933,411,2.695,412,2.695,413,2.695,414,6.216,415,3.826,416,5.311,417,5.931,418,4.841,419,4.448,420,3.19,421,2.236,422,2.236,423,2.236,424,2.236,425,3.826,426,2.695,427,2.695]],["title/dependencies.html",[31,1.722,428,2.15]],["body/dependencies.html",[11,0.036,17,1.058,26,0.028,27,0.028,31,1.836,46,2.247,48,2.846,49,3.553,131,2.247,206,3.553,207,2.846,262,1.836,402,2.513,403,2.513,429,5.401,430,3.968,431,3.968,432,3.968,433,3.968,434,3.968,435,3.968,436,3.968,437,3.968,438,3.968,439,3.968,440,3.968,441,3.968,442,3.968,443,3.968,444,3.968,445,3.968]],["title/miscellaneous/functions.html",[446,1.641,447,3.086]],["body/miscellaneous/functions.html",[7,1.145,11,0.031,26,0.031,27,0.031,420,3.383,422,4.828,446,2.987,447,3.913,448,3.913]],["title/index.html",[7,0.629,449,2.592,450,2.592]],["body/index.html",[11,0.03,26,0.015,27,0.015,67,1.226,82,1.083,168,1.912,176,1.083,206,1.226,251,1.418,315,1.912,355,0.968,359,1.538,410,1.226,421,2.252,451,4.466,452,1.71,453,1.71,454,4.857,455,1.71,456,3.377,457,3.846,458,1.71,459,5.73,460,1.71,461,1.71,462,3.19,463,4.682,464,1.71,465,1.71,466,1.71,467,1.71,468,5.004,469,1.71,470,2.715,471,3.846,472,4.682,473,1.71,474,1.71,475,1.71,476,1.71,477,1.71,478,1.71,479,4.466,480,3.377,481,1.71,482,1.71,483,1.71,484,2.715,485,2.715,486,2.715,487,2.715,488,2.715,489,3.377,490,1.71,491,1.71,492,4.195,493,1.71,494,1.71,495,1.71,496,1.71,497,4.682,498,1.71,499,1.71,500,1.71,501,3.377,502,1.71,503,1.71,504,1.71,505,1.71,506,1.71,507,1.71,508,1.71,509,1.71,510,1.71,511,2.715,512,1.71,513,4.253,514,3.846,515,3.48,516,1.71,517,1.71,518,1.71,519,1.71,520,1.71,521,1.71,522,1.71,523,1.71,524,3.846,525,1.71,526,1.71,527,2.715,528,1.71,529,1.71,530,1.71,531,1.71,532,1.71,533,1.71,534,1.71,535,1.71,536,1.71,537,2.715,538,4.682,539,1.71,540,1.71,541,1.71,542,1.71,543,1.71,544,1.71,545,1.71,546,1.71,547,3.377,548,3.846,549,3.377,550,3.377,551,3.377,552,1.71,553,1.71,554,4.466,555,2.715,556,3.377,557,1.71,558,2.715,559,1.71,560,1.71,561,3.377,562,3.377,563,3.377,564,3.48,565,2.715,566,1.71,567,1.71,568,1.71,569,1.71,570,1.71,571,1.71,572,1.71,573,1.71,574,1.71,575,1.71,576,1.71,577,1.71,578,1.71,579,1.71,580,1.71,581,1.71,582,1.71,583,1.71,584,2.715,585,1.71,586,1.418,587,1.71,588,2.715,589,2.715,590,2.715,591,1.71,592,1.71,593,1.71,594,1.71,595,1.71,596,3.377,597,2.715,598,3.377,599,1.71,600,1.71,601,2.715,602,2.715,603,1.71,604,1.71,605,2.715,606,1.71,607,1.71,608,1.71,609,1.71,610,1.71,611,1.71,612,1.71,613,1.71,614,1.71,615,1.71,616,1.71,617,1.71,618,1.71,619,1.71,620,1.71,621,1.71,622,1.71,623,1.71,624,1.71,625,1.71]],["title/modules.html",[30,1.95]],["body/modules.html",[11,0.03,26,0.03,27,0.03,29,2.806,30,2.05,35,2.509,36,2.509,37,2.509,626,5.875,627,5.875,628,5.875,629,5.875]],["title/overview.html",[630,3.495]],["body/overview.html",[2,1.395,11,0.034,18,2.647,26,0.026,27,0.026,29,3.86,30,1.682,31,2.168,32,3.014,33,3.014,34,3.014,35,3.21,36,3.21,37,3.21,38,2.653,39,2.058,40,2.058,98,2.058,104,1.273,210,2.647,256,3.014,257,3.014,325,2.647,335,3.014,336,3.014,367,2.647,377,3.014,378,3.014,630,3.014,631,5.184,632,3.634]],["title/properties.html",[106,1.899,428,2.15]],["body/properties.html",[11,0.035,26,0.031,27,0.031,106,2.373,165,3.855,217,3.855,633,4.648,634,4.648,635,4.648,636,4.648]],["title/miscellaneous/variables.html",[446,1.641,637,3.086]],["body/miscellaneous/variables.html",[3,0.32,7,0.542,11,0.036,24,1.167,26,0.019,27,0.019,41,1.601,45,2.816,55,2.038,56,2.392,57,1.852,58,3.399,59,2.767,60,1.852,61,1.852,62,1.852,63,1.852,64,1.852,65,1.852,66,1.852,67,1.601,68,1.264,69,1.852,70,1.852,71,1.852,72,2.193,73,3.312,74,3.312,75,3.312,76,1.852,77,3.312,78,1.852,79,2.767,80,1.852,81,1.852,82,1.414,83,1.852,84,1.852,85,1.852,90,2.261,94,2.261,114,1.592,168,1.264,173,3.566,199,1.681,218,1.852,258,1.601,259,2.528,261,2.528,264,2.816,265,2.528,266,2.528,267,2.528,268,2.528,269,2.528,270,2.528,271,1.852,272,1.852,273,2.528,285,4.125,315,1.264,337,1.601,339,1.852,340,1.852,359,1.264,379,1.601,381,1.852,382,1.852,420,1.601,423,2.767,424,3.312,446,1.414,448,2.767,462,1.852,513,2.767,515,2.767,564,1.852,586,2.767,637,1.852,638,2.233,639,2.233,640,2.233,641,2.233,642,3.993,643,2.233,644,2.233,645,2.233,646,2.233,647,2.233,648,2.233,649,2.233,650,2.233,651,2.233]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":633,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":218,"title":{},"body":{"controllers/ClientController.html":{},"miscellaneous/variables.html":{}}}],["1.6.2",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["1234567890",{"_index":128,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["2.0.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":178,"title":{},"body":{"controllers/ClientController.html":{}}}],["3",{"_index":512,"title":{},"body":{"index.html":{}}}],["3.0.2",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":631,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":232,"title":{},"body":{"controllers/ClientController.html":{}}}],["54759eb3c090d83494e2d804",{"_index":122,"title":{},"body":{"classes/Client.html":{},"classes/UpdateClientDto.html":{}}}],["7.2.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":526,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["8.4.4",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":632,"title":{},"body":{"overview.html":{}}}],["_configservice",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"clientmshost",{"_index":271,"title":{},"body":{"modules/ClientModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"clientmsport",{"_index":272,"title":{},"body":{"modules/ClientModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"projectmshost",{"_index":339,"title":{},"body":{"modules/ProjectModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"projectmsport",{"_index":340,"title":{},"body":{"modules/ProjectModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"talentmshost",{"_index":381,"title":{},"body":{"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["_configservice.get(\"talentmsport",{"_index":382,"title":{},"body":{"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["acceder",{"_index":485,"title":{},"body":{"index.html":{}}}],["aceptación",{"_index":510,"title":{},"body":{"index.html":{}}}],["action",{"_index":351,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["active",{"_index":107,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["adds",{"_index":352,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["adicionales",{"_index":553,"title":{},"body":{"index.html":{}}}],["al",{"_index":475,"title":{},"body":{"index.html":{}}}],["alojar",{"_index":599,"title":{},"body":{"index.html":{}}}],["ambiente",{"_index":534,"title":{},"body":{"index.html":{}}}],["angular",{"_index":545,"title":{},"body":{"index.html":{}}}],["api",{"_index":513,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":546,"title":{},"body":{"index.html":{}}}],["apicreatedresponse",{"_index":201,"title":{},"body":{"controllers/ClientController.html":{}}}],["apiokresponse",{"_index":202,"title":{},"body":{"controllers/ClientController.html":{}}}],["apioperation",{"_index":203,"title":{},"body":{"controllers/ClientController.html":{}}}],["apiproperty",{"_index":130,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["apiproperty({example",{"_index":116,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["apiresponse",{"_index":204,"title":{},"body":{"controllers/ClientController.html":{}}}],["apis",{"_index":478,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":205,"title":{},"body":{"controllers/ClientController.html":{}}}],["apitags('client",{"_index":216,"title":{},"body":{"controllers/ClientController.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule.port",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arquitectura",{"_index":520,"title":{},"body":{"index.html":{}}}],["asignar",{"_index":566,"title":{},"body":{"index.html":{}}}],["author",{"_index":636,"title":{},"body":{"properties.html":{}}}],["aws",{"_index":597,"title":{},"body":{"index.html":{}}}],["body",{"_index":195,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["boolean",{"_index":115,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["bootstrap",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borrado",{"_index":582,"title":{},"body":{"index.html":{}}}],["browse",{"_index":629,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":626,"title":{},"body":{"modules.html":{}}}],["build",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cada",{"_index":602,"title":{},"body":{"index.html":{}}}],["cantidad",{"_index":570,"title":{},"body":{"index.html":{}}}],["capacitación",{"_index":461,"title":{},"body":{"index.html":{}}}],["capaz",{"_index":549,"title":{},"body":{"index.html":{}}}],["catch",{"_index":230,"title":{},"body":{"controllers/ClientController.html":{}}}],["class",{"_index":21,"title":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"classes/Talent.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["classes",{"_index":104,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"classes/Talent.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"overview.html":{}}}],["client",{"_index":103,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"coverage.html":{}}}],["client'})@apicreatedresponse({description",{"_index":150,"title":{},"body":{"controllers/ClientController.html":{}}}],["client'})@apiokresponse({description",{"_index":171,"title":{},"body":{"controllers/ClientController.html":{}}}],["client'})@apiresponse({status",{"_index":177,"title":{},"body":{"controllers/ClientController.html":{}}}],["client.controller",{"_index":263,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.dto",{"_index":214,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/UpdateClientDto.html":{}}}],["client.dto.ts",{"_index":297,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["client.dto.ts:11",{"_index":396,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:12",{"_index":299,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:14",{"_index":399,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:15",{"_index":301,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:17",{"_index":395,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:18",{"_index":303,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:20",{"_index":398,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:21",{"_index":298,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:23",{"_index":400,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:26",{"_index":394,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:6",{"_index":300,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:8",{"_index":397,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:9",{"_index":302,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.service",{"_index":211,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["clientcontroller",{"_index":139,"title":{"controllers/ClientController.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["cliente",{"_index":565,"title":{},"body":{"index.html":{}}}],["clientes",{"_index":567,"title":{},"body":{"index.html":{}}}],["clientmodule",{"_index":35,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientoptions",{"_index":259,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":276,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["clientproxyfactory",{"_index":260,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{}}}],["clientproxyfactory.create(clientsoptions",{"_index":273,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["clients",{"_index":168,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["clients'})@apiokresponse({description",{"_index":162,"title":{},"body":{"controllers/ClientController.html":{}}}],["clients/client.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["clientsclient",{"_index":278,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientservice",{"_index":210,"title":{"injectables/ClientService.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["clientsoptions",{"_index":267,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["clientsservice",{"_index":219,"title":{},"body":{"controllers/ClientController.html":{}}}],["cloud",{"_index":494,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":256,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_providers",{"_index":257,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_projectmodule",{"_index":335,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_providers",{"_index":336,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_talentmodule",{"_index":377,"title":{},"body":{"modules/TalentModule.html":{},"overview.html":{}}}],["cluster_talentmodule_providers",{"_index":378,"title":{},"body":{"modules/TalentModule.html":{},"overview.html":{}}}],["commits",{"_index":544,"title":{},"body":{"index.html":{}}}],["como",{"_index":457,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":574,"title":{},"body":{"index.html":{}}}],["componentes",{"_index":620,"title":{},"body":{"index.html":{}}}],["comprender",{"_index":498,"title":{},"body":{"index.html":{}}}],["compute",{"_index":595,"title":{},"body":{"index.html":{}}}],["con",{"_index":524,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":182,"title":{},"body":{"controllers/ClientController.html":{}}}],["connectionfactory",{"_index":264,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["constructor(clientsclient",{"_index":275,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["constructor(projectsclient",{"_index":342,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(talentsclient",{"_index":384,"title":{},"body":{"injectables/TalentService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{},"coverage.html":{}}}],["controller('projects",{"_index":328,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controller('talents",{"_index":370,"title":{},"body":{"controllers/TalentController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"overview.html":{}}}],["conventional",{"_index":543,"title":{},"body":{"index.html":{}}}],["correr",{"_index":600,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":410,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crear",{"_index":477,"title":{},"body":{"index.html":{}}}],["create",{"_index":141,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["create(@body",{"_index":239,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["create(createclientdto",{"_index":147,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["create(createproyectdto",{"_index":316,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["create(createtalentdto",{"_index":360,"title":{},"body":{"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["createclientdto",{"_index":148,"title":{"classes/CreateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["created",{"_index":156,"title":{},"body":{"controllers/ClientController.html":{}}}],["createprojectdto",{"_index":304,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["createproyectdto",{"_index":318,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["createtalentdto",{"_index":307,"title":{"classes/CreateTalentDto.html":{}},"body":{"classes/CreateTalentDto.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["criterios",{"_index":509,"title":{},"body":{"index.html":{}}}],["crud",{"_index":550,"title":{},"body":{"index.html":{}}}],["culminación",{"_index":458,"title":{},"body":{"index.html":{}}}],["código",{"_index":537,"title":{},"body":{"index.html":{}}}],["dan",{"_index":473,"title":{},"body":{"index.html":{}}}],["darwoft",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":224,"title":{},"body":{"controllers/ClientController.html":{}}}],["date.now",{"_index":222,"title":{},"body":{"controllers/ClientController.html":{}}}],["dd",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":459,"title":{},"body":{"index.html":{}}}],["debe",{"_index":561,"title":{},"body":{"index.html":{}}}],["deben",{"_index":573,"title":{},"body":{"index.html":{}}}],["debug",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["debug.log",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{},"classes/UpdateClientDto.html":{}}}],["default",{"_index":285,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/variables.html":{}}}],["defaultversion",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{}}}],["delete",{"_index":176,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{},"index.html":{}}}],["delete(':id",{"_index":245,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":175,"title":{},"body":{"controllers/ClientController.html":{}}}],["deleted",{"_index":183,"title":{},"body":{"controllers/ClientController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desarrollar",{"_index":511,"title":{},"body":{"index.html":{}}}],["describo",{"_index":467,"title":{},"body":{"index.html":{}}}],["description",{"_index":165,"title":{},"body":{"controllers/ClientController.html":{},"properties.html":{}}}],["dirname",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["diseñada",{"_index":622,"title":{},"body":{"index.html":{}}}],["diseño",{"_index":619,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["documentationoptions",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentbuilder",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dominio",{"_index":603,"title":{},"body":{"index.html":{}}}],["dominios",{"_index":500,"title":{},"body":{"index.html":{}}}],["done",{"_index":560,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":213,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["dto/update",{"_index":215,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["duration",{"_index":255,"title":{},"body":{"controllers/ClientController.html":{}}}],["dynamodb",{"_index":615,"title":{},"body":{"index.html":{}}}],["el",{"_index":454,"title":{},"body":{"index.html":{}}}],["elapsedtime",{"_index":249,"title":{},"body":{"controllers/ClientController.html":{}}}],["email",{"_index":108,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["empresa",{"_index":481,"title":{},"body":{"index.html":{}}}],["en",{"_index":462,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":518,"title":{},"body":{"index.html":{}}}],["entidades",{"_index":502,"title":{},"body":{"index.html":{}}}],["entities/client.entity",{"_index":212,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["error",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.log",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":579,"title":{},"body":{"index.html":{}}}],["estados",{"_index":556,"title":{},"body":{"index.html":{}}}],["estar",{"_index":621,"title":{},"body":{"index.html":{}}}],["este",{"_index":496,"title":{},"body":{"index.html":{}}}],["esto",{"_index":490,"title":{},"body":{"index.html":{}}}],["example:'54759eb3c090d83494e2d804",{"_index":132,"title":{},"body":{"classes/Client.html":{},"classes/UpdateClientDto.html":{}}}],["example:'image.jpg",{"_index":136,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["example:'noel",{"_index":133,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["example:'noel@reviglio.com",{"_index":135,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["example:'reviglio",{"_index":134,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["example:1234567890",{"_index":137,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["example:true",{"_index":138,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["exponer",{"_index":607,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["express",{"_index":206,"title":{},"body":{"controllers/ClientController.html":{},"dependencies.html":{},"index.html":{}}}],["expuestos",{"_index":517,"title":{},"body":{"index.html":{}}}],["extends",{"_index":404,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["factory",{"_index":483,"title":{},"body":{"index.html":{}}}],["fijar",{"_index":571,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["filename",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":167,"title":{},"body":{"controllers/ClientController.html":{}}}],["findall",{"_index":142,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["findall(params",{"_index":280,"title":{},"body":{"injectables/ClientService.html":{}}}],["findall(request",{"_index":157,"title":{},"body":{"controllers/ClientController.html":{}}}],["findone",{"_index":143,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["findone(@param('id",{"_index":236,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["findone(id",{"_index":169,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["finishtime",{"_index":248,"title":{},"body":{"controllers/ClientController.html":{}}}],["firstname",{"_index":109,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["format",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":590,"title":{},"body":{"index.html":{}}}],["funcionales",{"_index":470,"title":{},"body":{"index.html":{}}}],["function",{"_index":421,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functions",{"_index":447,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":605,"title":{},"body":{"index.html":{}}}],["generando",{"_index":575,"title":{},"body":{"index.html":{}}}],["generar",{"_index":492,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":235,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["get(':id')@apioperation({summary",{"_index":170,"title":{},"body":{"controllers/ClientController.html":{}}}],["get()@apioperation({summary",{"_index":160,"title":{},"body":{"controllers/ClientController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":449,"title":{"index.html":{}},"body":{}}],["github",{"_index":540,"title":{},"body":{"index.html":{}}}],["gitlab",{"_index":541,"title":{},"body":{"index.html":{}}}],["going",{"_index":558,"title":{},"body":{"index.html":{}}}],["hacer",{"_index":581,"title":{},"body":{"index.html":{}}}],["handling",{"_index":576,"title":{},"body":{"index.html":{}}}],["hello",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["hh:mm:ss",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":270,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":624,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":200,"title":{},"body":{"controllers/ClientController.html":{}}}],["httpstatus.internal_server_error",{"_index":234,"title":{},"body":{"controllers/ClientController.html":{}}}],["httpstatus.ok",{"_index":227,"title":{},"body":{"controllers/ClientController.html":{}}}],["id",{"_index":110,"title":{},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{}}}],["identifier",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":111,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["image.jpg",{"_index":124,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"miscellaneous/variables.html":{}}}],["info.log",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["información",{"_index":487,"title":{},"body":{"index.html":{}}}],["inject",{"_index":199,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"miscellaneous/variables.html":{}}}],["inject('clients",{"_index":287,"title":{},"body":{"injectables/ClientService.html":{}}}],["inject('projects",{"_index":350,"title":{},"body":{"injectables/ProjectService.html":{}}}],["inject('talents",{"_index":392,"title":{},"body":{"injectables/TalentService.html":{}}}],["inject(winston_module_provider",{"_index":220,"title":{},"body":{"controllers/ClientController.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AppService.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{},"overview.html":{}}}],["isglobal",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["javascript",{"_index":466,"title":{},"body":{"index.html":{}}}],["jest",{"_index":592,"title":{},"body":{"index.html":{}}}],["la",{"_index":463,"title":{},"body":{"index.html":{}}}],["lambda",{"_index":598,"title":{},"body":{"index.html":{}}}],["lambdas",{"_index":608,"title":{},"body":{"index.html":{}}}],["las",{"_index":501,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":112,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["level",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"miscellaneous/variables.html":{}}}],["libres",{"_index":504,"title":{},"body":{"index.html":{}}}],["license",{"_index":634,"title":{},"body":{"properties.html":{}}}],["list",{"_index":161,"title":{},"body":{"controllers/ClientController.html":{}}}],["listado",{"_index":563,"title":{},"body":{"index.html":{}}}],["local",{"_index":535,"title":{},"body":{"index.html":{}}}],["log/debug",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["log/error",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["log/info",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":209,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["logger('clientservice",{"_index":286,"title":{},"body":{"injectables/ClientService.html":{}}}],["loggeroption",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["los",{"_index":468,"title":{},"body":{"index.html":{}}}],["lógico",{"_index":583,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":577,"title":{},"body":{"index.html":{}}}],["marco",{"_index":474,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":181,"title":{},"body":{"controllers/ClientController.html":{}}}],["metadata",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":251,"title":{},"body":{"controllers/ClientController.html":{},"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["microservicios",{"_index":521,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":446,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["modelar",{"_index":505,"title":{},"body":{"index.html":{}}}],["modelo",{"_index":614,"title":{},"body":{"index.html":{}}}],["modo",{"_index":506,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":616,"title":{},"body":{"index.html":{}}}],["ms",{"_index":289,"title":{},"body":{"injectables/ClientService.html":{}}}],["muchos",{"_index":568,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":617,"title":{},"body":{"index.html":{}}}],["name",{"_index":153,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["native",{"_index":495,"title":{},"body":{"index.html":{}}}],["necesita",{"_index":484,"title":{},"body":{"index.html":{}}}],["negocio",{"_index":489,"title":{},"body":{"index.html":{}}}],["nest",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"dependencies.html":{}}}],["nestjs",{"_index":588,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":402,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":262,"title":{},"body":{"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":131,"title":{},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"dependencies.html":{}}}],["new",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nice",{"_index":580,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":586,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["noel",{"_index":120,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["noel@reviglio.com",{"_index":118,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["nos",{"_index":452,"title":{},"body":{"index.html":{}}}],["nosql",{"_index":610,"title":{},"body":{"index.html":{}}}],["npm",{"_index":593,"title":{},"body":{"index.html":{}}}],["nuestras",{"_index":601,"title":{},"body":{"index.html":{}}}],["nuestro",{"_index":613,"title":{},"body":{"index.html":{}}}],["number",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{}}}],["o",{"_index":611,"title":{},"body":{"index.html":{}}}],["object",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objetivos",{"_index":476,"title":{},"body":{"index.html":{}}}],["observabilidad",{"_index":578,"title":{},"body":{"index.html":{}}}],["observable",{"_index":155,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["obtener",{"_index":562,"title":{},"body":{"index.html":{}}}],["offline",{"_index":591,"title":{},"body":{"index.html":{}}}],["ok",{"_index":228,"title":{},"body":{"controllers/ClientController.html":{}}}],["optional",{"_index":154,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["options",{"_index":269,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"overview.html":{}}}],["overview",{"_index":630,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":428,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":479,"title":{},"body":{"index.html":{}}}],["param",{"_index":197,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["parameters",{"_index":152,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["params",{"_index":166,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["partialtype",{"_index":401,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["partialtype(createclientdto",{"_index":405,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["partialtype(createprojectdto",{"_index":407,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createtalentdto",{"_index":409,"title":{},"body":{"classes/UpdateTalentDto.html":{}}}],["patch",{"_index":196,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["patch(':id",{"_index":241,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":186,"title":{},"body":{"controllers/ClientController.html":{}}}],["path",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{}}}],["path.join(__dirname",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["patrones",{"_index":529,"title":{},"body":{"index.html":{}}}],["pending",{"_index":557,"title":{},"body":{"index.html":{}}}],["percepción",{"_index":507,"title":{},"body":{"index.html":{}}}],["persistencia",{"_index":584,"title":{},"body":{"index.html":{}}}],["persistir",{"_index":486,"title":{},"body":{"index.html":{}}}],["personal",{"_index":508,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":113,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["pide",{"_index":491,"title":{},"body":{"index.html":{}}}],["poder",{"_index":497,"title":{},"body":{"index.html":{}}}],["por",{"_index":564,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["porcentaje",{"_index":572,"title":{},"body":{"index.html":{}}}],["port",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":194,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["post()@apioperation({summary",{"_index":149,"title":{},"body":{"controllers/ClientController.html":{}}}],["postgresql",{"_index":618,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":314,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["presente",{"_index":455,"title":{},"body":{"index.html":{}}}],["private",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["probar",{"_index":531,"title":{},"body":{"index.html":{}}}],["proceso",{"_index":460,"title":{},"body":{"index.html":{}}}],["project",{"_index":310,"title":{"classes/Project.html":{}},"body":{"classes/Project.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["project.controller",{"_index":338,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project.dto",{"_index":327,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":306,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.service",{"_index":326,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{}}}],["projectcontroller",{"_index":312,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectmodule",{"_index":36,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["projects",{"_index":315,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["projects/project.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["projectsclient",{"_index":344,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectservice",{"_index":325,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["projectsservice",{"_index":329,"title":{},"body":{"controllers/ProjectController.html":{}}}],["properties",{"_index":106,"title":{"properties.html":{}},"body":{"classes/Client.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"properties.html":{}}}],["propuesta",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":265,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{}}}],["proyecto",{"_index":456,"title":{},"body":{"index.html":{}}}],["proyectos",{"_index":554,"title":{},"body":{"index.html":{}}}],["que",{"_index":472,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["reflect",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":144,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["remove(@param('id",{"_index":246,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["remove(id",{"_index":174,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["removes",{"_index":354,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["repositorio",{"_index":539,"title":{},"body":{"index.html":{}}}],["representative",{"_index":180,"title":{},"body":{"controllers/ClientController.html":{}}}],["req",{"_index":198,"title":{},"body":{"controllers/ClientController.html":{}}}],["requerimientos",{"_index":469,"title":{},"body":{"index.html":{}}}],["request",{"_index":158,"title":{},"body":{"controllers/ClientController.html":{}}}],["request['method",{"_index":252,"title":{},"body":{"controllers/ClientController.html":{}}}],["request['url",{"_index":254,"title":{},"body":{"controllers/ClientController.html":{}}}],["requisitos",{"_index":519,"title":{},"body":{"index.html":{}}}],["res",{"_index":159,"title":{},"body":{"controllers/ClientController.html":{}}}],["res.status(httpstatus.internal_server_error).json",{"_index":233,"title":{},"body":{"controllers/ClientController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":229,"title":{},"body":{"controllers/ClientController.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"overview.html":{}}}],["rest",{"_index":515,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["reviglio",{"_index":126,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["rimraf",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":207,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"dependencies.html":{}}}],["s",{"_index":514,"title":{},"body":{"index.html":{}}}],["se",{"_index":451,"title":{},"body":{"index.html":{}}}],["seguir",{"_index":528,"title":{},"body":{"index.html":{}}}],["ser",{"_index":548,"title":{},"body":{"index.html":{}}}],["server",{"_index":625,"title":{},"body":{"index.html":{}}}],["serverless",{"_index":589,"title":{},"body":{"index.html":{}}}],["serverside",{"_index":465,"title":{},"body":{"index.html":{}}}],["setdescription('challenge",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('challenge",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["siguientes",{"_index":499,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":551,"title":{},"body":{"index.html":{}}}],["software",{"_index":482,"title":{},"body":{"index.html":{}}}],["solicita",{"_index":453,"title":{},"body":{"index.html":{}}}],["solid",{"_index":530,"title":{},"body":{"index.html":{}}}],["soluciones",{"_index":609,"title":{},"body":{"index.html":{}}}],["solución",{"_index":493,"title":{},"body":{"index.html":{}}}],["son",{"_index":503,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTalentDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Talent.html":{},"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{}}}],["sql",{"_index":612,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../client.module.ts",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../project.module.ts",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../talent.module.ts",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["src/clients/client.controller.ts",{"_index":140,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/clients/client.controller.ts:107",{"_index":151,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.controller.ts:124",{"_index":187,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.controller.ts:140",{"_index":179,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.controller.ts:144",{"_index":192,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.controller.ts:40",{"_index":164,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.controller.ts:74",{"_index":172,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/clients/client.module.ts",{"_index":258,"title":{},"body":{"modules/ClientModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/clients/client.service.ts",{"_index":274,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/clients/client.service.ts:10",{"_index":277,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/client.service.ts:15",{"_index":281,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/client.service.ts:20",{"_index":282,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/client.service.ts:25",{"_index":279,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/client.service.ts:30",{"_index":284,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/client.service.ts:35",{"_index":283,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/clients/dto/create",{"_index":296,"title":{},"body":{"classes/CreateClientDto.html":{},"coverage.html":{}}}],["src/clients/dto/update",{"_index":393,"title":{},"body":{"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["src/clients/entities/client.entity.ts",{"_index":105,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/clients/entities/client.entity.ts:11",{"_index":127,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:14",{"_index":119,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:17",{"_index":125,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:20",{"_index":129,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:23",{"_index":117,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:5",{"_index":123,"title":{},"body":{"classes/Client.html":{}}}],["src/clients/entities/client.entity.ts:8",{"_index":121,"title":{},"body":{"classes/Client.html":{}}}],["src/main.ts",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/projects/dto/create",{"_index":305,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/projects/dto/update",{"_index":406,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/projects/entities/project.entity.ts",{"_index":311,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/projects/project.controller.ts",{"_index":313,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/projects/project.controller.ts:11",{"_index":317,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/projects/project.controller.ts:16",{"_index":319,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/projects/project.controller.ts:21",{"_index":320,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/projects/project.controller.ts:26",{"_index":324,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/projects/project.controller.ts:31",{"_index":321,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/projects/project.module.ts",{"_index":337,"title":{},"body":{"modules/ProjectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/projects/project.service.ts",{"_index":341,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/projects/project.service.ts:12",{"_index":345,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/projects/project.service.ts:16",{"_index":346,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/projects/project.service.ts:20",{"_index":347,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/projects/project.service.ts:24",{"_index":349,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/projects/project.service.ts:28",{"_index":348,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/projects/project.service.ts:7",{"_index":343,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/talents/dto/create",{"_index":308,"title":{},"body":{"classes/CreateTalentDto.html":{},"coverage.html":{}}}],["src/talents/dto/update",{"_index":408,"title":{},"body":{"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["src/talents/entities/talent.entity.ts",{"_index":356,"title":{},"body":{"classes/Talent.html":{},"coverage.html":{}}}],["src/talents/talent.controller.ts",{"_index":358,"title":{},"body":{"controllers/TalentController.html":{},"coverage.html":{}}}],["src/talents/talent.controller.ts:11",{"_index":361,"title":{},"body":{"controllers/TalentController.html":{}}}],["src/talents/talent.controller.ts:16",{"_index":362,"title":{},"body":{"controllers/TalentController.html":{}}}],["src/talents/talent.controller.ts:21",{"_index":363,"title":{},"body":{"controllers/TalentController.html":{}}}],["src/talents/talent.controller.ts:26",{"_index":366,"title":{},"body":{"controllers/TalentController.html":{}}}],["src/talents/talent.controller.ts:31",{"_index":364,"title":{},"body":{"controllers/TalentController.html":{}}}],["src/talents/talent.module.ts",{"_index":379,"title":{},"body":{"modules/TalentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/talents/talent.service.ts",{"_index":383,"title":{},"body":{"injectables/TalentService.html":{},"coverage.html":{}}}],["src/talents/talent.service.ts:12",{"_index":387,"title":{},"body":{"injectables/TalentService.html":{}}}],["src/talents/talent.service.ts:16",{"_index":388,"title":{},"body":{"injectables/TalentService.html":{}}}],["src/talents/talent.service.ts:20",{"_index":389,"title":{},"body":{"injectables/TalentService.html":{}}}],["src/talents/talent.service.ts:24",{"_index":391,"title":{},"body":{"injectables/TalentService.html":{}}}],["src/talents/talent.service.ts:28",{"_index":390,"title":{},"body":{"injectables/TalentService.html":{}}}],["src/talents/talent.service.ts:7",{"_index":385,"title":{},"body":{"injectables/TalentService.html":{}}}],["stack",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":450,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":190,"title":{},"body":{"controllers/ClientController.html":{}}}],["statements",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["status",{"_index":242,"title":{},"body":{"controllers/ClientController.html":{}}}],["statuscode",{"_index":191,"title":{},"body":{"controllers/ClientController.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{}}}],["su",{"_index":488,"title":{},"body":{"index.html":{}}}],["subir",{"_index":536,"title":{},"body":{"index.html":{}}}],["summary",{"_index":221,"title":{},"body":{"controllers/ClientController.html":{}}}],["supere",{"_index":525,"title":{},"body":{"index.html":{}}}],["support",{"_index":627,"title":{},"body":{"modules.html":{}}}],["suspended",{"_index":559,"title":{},"body":{"index.html":{}}}],["svg",{"_index":628,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["talent",{"_index":355,"title":{"classes/Talent.html":{}},"body":{"classes/Talent.html":{},"injectables/TalentService.html":{},"coverage.html":{},"index.html":{}}}],["talent.controller",{"_index":380,"title":{},"body":{"modules/TalentModule.html":{}}}],["talent.dto",{"_index":369,"title":{},"body":{"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateTalentDto.html":{}}}],["talent.dto.ts",{"_index":309,"title":{},"body":{"classes/CreateTalentDto.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["talent.service",{"_index":368,"title":{},"body":{"controllers/TalentController.html":{},"modules/TalentModule.html":{}}}],["talentcontroller",{"_index":357,"title":{"controllers/TalentController.html":{}},"body":{"controllers/TalentController.html":{},"modules/TalentModule.html":{},"coverage.html":{}}}],["talentmodule",{"_index":37,"title":{"modules/TalentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TalentModule.html":{},"modules.html":{},"overview.html":{}}}],["talents",{"_index":359,"title":{},"body":{"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["talents.consideraciones",{"_index":552,"title":{},"body":{"index.html":{}}}],["talents/talent.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["talentsclient",{"_index":386,"title":{},"body":{"injectables/TalentService.html":{}}}],["talentservice",{"_index":367,"title":{"injectables/TalentService.html":{}},"body":{"controllers/TalentController.html":{},"modules/TalentModule.html":{},"injectables/TalentService.html":{},"coverage.html":{},"overview.html":{}}}],["talentsservice",{"_index":371,"title":{},"body":{"controllers/TalentController.html":{}}}],["tecnología",{"_index":464,"title":{},"body":{"index.html":{}}}],["tecnológico",{"_index":585,"title":{},"body":{"index.html":{}}}],["tengan",{"_index":516,"title":{},"body":{"index.html":{}}}],["test",{"_index":523,"title":{},"body":{"index.html":{}}}],["this._configservice.get(\"port",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.clientsclient.send('delete_client',id",{"_index":295,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientsclient.send('get_all_client',params",{"_index":290,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientsclient.send('get_client',id",{"_index":291,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientsclient.send('new_client',createclientdto",{"_index":292,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientsclient.send('update_client',updateclientdto",{"_index":294,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientsservice.create(createclientdto",{"_index":240,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientsservice.findall(request.query",{"_index":225,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientsservice.findone(id",{"_index":237,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientsservice.remove(+id",{"_index":247,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientsservice.update(+id",{"_index":244,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.logger.log",{"_index":250,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.logger.log(`calling",{"_index":288,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.projectsservice.create(createproyectdto",{"_index":330,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectsservice.findall",{"_index":331,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectsservice.findone(+id",{"_index":332,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectsservice.remove(+id",{"_index":334,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectsservice.update(+id",{"_index":333,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.talentsservice.create(createtalentdto",{"_index":372,"title":{},"body":{"controllers/TalentController.html":{}}}],["this.talentsservice.findall",{"_index":373,"title":{},"body":{"controllers/TalentController.html":{}}}],["this.talentsservice.findone(+id",{"_index":374,"title":{},"body":{"controllers/TalentController.html":{}}}],["this.talentsservice.remove(+id",{"_index":376,"title":{},"body":{"controllers/TalentController.html":{}}}],["this.talentsservice.update(+id",{"_index":375,"title":{},"body":{"controllers/TalentController.html":{}}}],["this.writelog('error",{"_index":231,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.writelog('info",{"_index":226,"title":{},"body":{"controllers/ClientController.html":{}}}],["tiene",{"_index":527,"title":{},"body":{"index.html":{}}}],["tienen",{"_index":555,"title":{},"body":{"index.html":{}}}],["todo",{"_index":532,"title":{},"body":{"index.html":{}}}],["transport",{"_index":261,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["transport.tcp",{"_index":268,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["transports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":223,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["type",{"_index":114,"title":{},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CreateClientDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":403,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTalentDto.html":{},"dependencies.html":{}}}],["typescriptarquitectura",{"_index":594,"title":{},"body":{"index.html":{}}}],["ui",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":538,"title":{},"body":{"index.html":{}}}],["una",{"_index":480,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":163,"title":{},"body":{"controllers/ClientController.html":{}}}],["unit",{"_index":522,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":635,"title":{},"body":{"properties.html":{}}}],["update",{"_index":145,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["update(@param('id",{"_index":243,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ProjectController.html":{},"controllers/TalentController.html":{}}}],["update(id",{"_index":184,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TalentController.html":{},"injectables/TalentService.html":{}}}],["updateclientdto",{"_index":185,"title":{"classes/UpdateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["updateclientdto.id",{"_index":293,"title":{},"body":{"injectables/ClientService.html":{}}}],["updated",{"_index":188,"title":{},"body":{"controllers/ClientController.html":{}}}],["updateprojectdto",{"_index":323,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["updateproyectdto",{"_index":322,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["updates",{"_index":353,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TalentService.html":{}}}],["updatetalentdto",{"_index":365,"title":{"classes/UpdateTalentDto.html":{}},"body":{"controllers/TalentController.html":{},"injectables/TalentService.html":{},"classes/UpdateTalentDto.html":{},"coverage.html":{}}}],["url",{"_index":253,"title":{},"body":{"controllers/ClientController.html":{}}}],["usefactory",{"_index":266,"title":{},"body":{"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"miscellaneous/variables.html":{}}}],["utilizar",{"_index":542,"title":{},"body":{"index.html":{}}}],["utilizara",{"_index":604,"title":{},"body":{"index.html":{}}}],["utilizaremos",{"_index":596,"title":{},"body":{"index.html":{}}}],["v1",{"_index":606,"title":{},"body":{"index.html":{}}}],["v14.x",{"_index":587,"title":{},"body":{"index.html":{}}}],["va",{"_index":547,"title":{},"body":{"index.html":{}}}],["validar",{"_index":569,"title":{},"body":{"index.html":{}}}],["value",{"_index":173,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":238,"title":{},"body":{"controllers/ClientController.html":{}}}],["variable",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":637,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":217,"title":{},"body":{"controllers/ClientController.html":{},"properties.html":{}}}],["versioningoptions",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":193,"title":{},"body":{"controllers/ClientController.html":{}}}],["w",{"_index":623,"title":{},"body":{"index.html":{}}}],["winston",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.format.errors",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.format.splat",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.loggeroptions",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["winston_module_provider",{"_index":208,"title":{},"body":{"controllers/ClientController.html":{}}}],["winstonmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot(loggeroption",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow",{"_index":533,"title":{},"body":{"index.html":{}}}],["world",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":146,"title":{},"body":{"controllers/ClientController.html":{}}}],["writelog(level",{"_index":189,"title":{},"body":{"controllers/ClientController.html":{}}}],["y",{"_index":471,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ProjectModule.html":{},"modules/TalentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nClientModule\n\nClientModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nTalentModule\n\nTalentModule\n\nAppModule -->\n\nTalentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            TalentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { WinstonModule } from 'nest-winston';\nimport * as winston from 'winston';\nimport * as path from 'path';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ClientModule } from './clients/client.module';\nimport { ProjectModule } from './projects/project.module';\nimport { TalentModule } from './talents/talent.module';\n\n\nconst loggerOption : winston.LoggerOptions ={\n  level: 'info', \n  format: winston.format.combine( \n    winston.format.timestamp({\n      format: 'YYYY-MM-DD HH:mm:ss',\n    }),\n    winston.format.errors({ stack: true }),\n    winston.format.splat(),\n    winston.format.json(),\n  ),\n  transports: [ \n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/debug/'),\n      filename: 'debug.log',\n      level: 'debug',\n    }),\n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/error/'),\n      filename: 'error.log',\n      level: 'error',\n    }),\n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/info/'),\n      filename: 'info.log',\n      level: 'info',\n    }),\n    new winston.transports.Console({ level: 'debug' }),\n  ],\n}\n\n\n@Module({\n  imports: [ConfigModule.forRoot({ isGlobal: true }),\n            WinstonModule.forRoot(loggerOption), \n            ClientModule,\n            ProjectModule, \n            TalentModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\n\nexport class AppModule {\n  static port : number;\n  constructor( private readonly _configService : ConfigService ){\n    AppModule.port = +this._configService.get(\"PORT\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/entities/client.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                active\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'noel@reviglio.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Noel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '54759eb3c090d83494e2d804'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Reviglio'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1234567890})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/entities/client.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Client {\n    @ApiProperty({ example:'54759eb3c090d83494e2d804' })\n    readonly id: string;\n\n    @ApiProperty({ example:'Noel' })\n    readonly firstName: string;\n\n    @ApiProperty({ example:'Reviglio' })\n    readonly lastName: string;\n\n    @ApiProperty({ example:'noel@reviglio.com' })\n    readonly email: string;\n\n    @ApiProperty({ example:'image.jpg' })\n    readonly image: string;\n\n    @ApiProperty({ example:1234567890 })\n    readonly phoneNumber: number;\n\n    @ApiProperty({ example:true })\n    readonly active: Boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/client.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createClientDto: CreateClientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a client'})@ApiCreatedResponse({description: 'Create a new Client', type: Client})\n                \n            \n\n            \n                \n                    Defined in src/clients/client.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClientDto\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Returns the new client created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get a list of all clients'})@ApiOkResponse({description: 'List of Client', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/clients/client.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of params to filter\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Returns a list of clients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a client'})@ApiOkResponse({description: 'A Client', type: Client})\n                \n            \n\n            \n                \n                    Defined in src/clients/client.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to filter\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Returns a client\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a client'})@ApiResponse({status: 200, description: 'Delete a Client, by its id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/clients/client.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The representative value to delete a client\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Returns a message to confirm the deleted client\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateClientDto: UpdateClientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a client'})@ApiResponse({status: 200, description: 'Update a Client', type: Client})\n                \n            \n\n            \n                \n                    Defined in src/clients/client.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The representative value to update a client\n\n                                    \n                                \n                                \n                                    updateClientDto\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Returns the client that was updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeLog\n                        \n                    \n                \n            \n            \n                \nwriteLog(level: string, startTime: any, request: any, statusCode: number, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, \n         Post, Body, \n         Patch, Param, \n         Delete, Req, \n         Inject, Res, \n         HttpStatus} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiOkResponse, \n         ApiOperation, ApiResponse, \n         ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { ClientService } from './client.service';\nimport { Client } from './entities/client.entity';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\n\n@ApiTags('client')\n@Controller({\n  path: 'clients',\n  version: '1',\n})\nexport class ClientController {\n\n  constructor(private readonly clientsService: ClientService,\n              @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger) {}\n  \n  /** \n   *\n   * @returns {Client[]} Returns a list of clients\n   * @param {Request} request The list of params to filter\n   */\n  @Get()\n  @ApiOperation({ summary: 'Get a list of all clients' })\n  @ApiOkResponse({ \n    description: 'List of Client',\n    type: [Client], \n  })\n  findAll( @Req() request: Request, @Res() res ) : Observable{\n    let startTime = Date.now();\n    try {\n      let data = this.clientsService.findAll(request.query);\n      \n      this.writeLog('info', startTime, request, HttpStatus.OK, 'Return the list of all clients OK');\n\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: 'OK',\n        data: data\n      });\n      \n    } catch (error) {\n      this.writeLog('error', startTime, request, 500, `Error: ${error}`);\n\n      return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: `ERROR: ${error}`,\n      });\n    }\n  }\n  \n  /** \n   *\n   * @returns {Client} Returns a client\n   * @param {id} id The value to filter\n   */\n  @Get(':id')\n  @ApiOperation({ summary: 'Get a client' })\n  @ApiOkResponse({ \n    description: 'A Client',\n    type: Client, \n  })\n  findOne(@Param('id') id: string, @Req() request: Request, @Res() res ) :Observable {\n    let startTime = Date.now();\n    try {\n      const client = this.clientsService.findOne(id);\n      \n      this.writeLog('info', startTime, request, HttpStatus.OK, 'Return the list of all clients OK');\n\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        message: 'OK',\n        data: client\n      });\n    } catch (error) {\n      this.writeLog('error', startTime, request, 500, `Error: ${error}`);\n\n      return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: `ERROR: ${error}`,\n      });\n    }      \n  }\n\n  /** \n   *\n   * @returns {Client} Returns the new client created\n   * @param {Body} body The values to create a new client\n   */\n   @Post()\n   @ApiOperation({ summary: 'Create a client' })\n   @ApiCreatedResponse({ \n     description: 'Create a new Client',\n     type: Client, \n   })\n  create(@Body() createClientDto: CreateClientDto) :Observable{\n    return this.clientsService.create(createClientDto);\n  }\n\n  /** \n   *\n   * @returns {Client} Returns the client that was updated\n   * @param {Body} body The values to update a client\n   * @param {id} id The representative value to update a client\n   */\n   @Patch(':id')\n   @ApiOperation({ summary: 'Update a client' })\n   @ApiResponse({ \n     status: 200,\n     description: 'Update a Client',\n     type: Client, \n   })\n  update(@Param('id') id: string, @Body() updateClientDto: UpdateClientDto) :Observable{\n    return this.clientsService.update(+id, updateClientDto);\n  }\n\n  /** \n   *\n   * @returns {Client} Returns a message to confirm the deleted client\n   * @param {id} id The representative value to delete a client\n   */\n   @Delete(':id')\n   @ApiOperation({ summary: 'Delete a client' })\n   @ApiResponse({ \n     status: 200,\n     description: 'Delete a Client, by its id',\n     type: String, \n   })\n  remove(@Param('id') id: string) : Observable {\n    return this.clientsService.remove(+id);\n  }\n  \n  writeLog(level: string, startTime: any, request: any, statusCode: number, message: string) {\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n\n    this.logger.log({\n      level: level,\n      message: message,\n      statusCode: statusCode,\n      method: request['method'],\n      url: request['url'],\n      duration: elapsedTime,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\n\nClientService\n\nClientService\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/clients/client.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientOptions, ClientProxyFactory, Transport } from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientService } from './client.service';\nimport { ClientController } from './client.controller';\n\n\nconst connectionFactory = {\n  provide: 'CLIENTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"CLIENTMSHOST\"),\n        port: _configService.get(\"CLIENTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n\n\n@Module({\n  controllers: [ClientController],\n  providers: [ClientService,\n    connectionFactory,\n  ]\n})\n\nexport class ClientModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/clients/client.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientsClient\n                                                  \n                                                        \n                                                                        ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createClientDto: CreateClientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClientDto\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateClientDto: UpdateClientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/clients/client.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClientDto\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('ClientService')\n                    \n                \n                    \n                        \n                                Defined in src/clients/client.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { Client } from './entities/client.entity';\n\n@Injectable()\nexport class ClientService {\n  private logger = new Logger('ClientService');\n\n  constructor(\n    @Inject('CLIENTS') private readonly clientsClient: ClientProxy) {}\n\n  findAll(params) : Observable{\n    this.logger.log(`Calling to CLient-ms to get all Clients!`);\n    return this.clientsClient.send('get_all_client',params);\n    }\n\n  findOne(id: string) : Observable {\n    this.logger.log(`Calling to Client-ms to get the Client with id: ${id}!`);\n    return this.clientsClient.send('get_client',id);\n  }\n  \n  create(createClientDto: CreateClientDto) : Observable{\n    this.logger.log(`Calling to Client-ms to try create a new Client!`);\n    return this.clientsClient.send('new_client',createClientDto);\n  }\n  \n  update(id: number, updateClientDto: UpdateClientDto) : Observable{\n    this.logger.log(`Calling to Client-ms to update the Client with id: ${updateClientDto.id}!`);\n    return this.clientsClient.send('update_client',updateClientDto);\n  }\n  \n  remove(id: number) : Observable{\n    this.logger.log(`Calling to Client-ms to remove the Client with id: ${id}!`);\n    return this.clientsClient.send('delete_client',id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientDto.html":{"url":"classes/CreateClientDto.html","title":"class - CreateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/dto/create-client.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                active\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'noel@reviglio.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Noel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Reviglio'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1234567890})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/create-client.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; \n\nexport class CreateClientDto {\n    \n    @ApiProperty({ example:'Noel' })\n    readonly firstName: string;\n    \n    @ApiProperty({ example:'Reviglio' })\n    readonly lastName: string;\n    \n    @ApiProperty({ example:'noel@reviglio.com' })\n    readonly email: string;\n    \n    @ApiProperty({ example:'image.jpg' })\n    readonly image: string;\n    \n    @ApiProperty({ example:1234567890 })\n    readonly phoneNumber: number;\n    \n    @ApiProperty({ example:true })\n    readonly active: Boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProjectDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTalentDto.html":{"url":"classes/CreateTalentDto.html","title":"class - CreateTalentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTalentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/talents/dto/create-talent.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTalentDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/entities/project.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Project {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/project.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProyectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/projects/project.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProyectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/projects/project.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/project.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/project.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProyectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/project.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProyectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ProjectService } from './project.service';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\n\n@Controller('projects')\nexport class ProjectController {\n  constructor(private readonly projectsService: ProjectService) {}\n\n  @Post()\n  create(@Body() createProyectDto: CreateProjectDto) {\n    return this.projectsService.create(createProyectDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.projectsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.projectsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProyectDto: UpdateProjectDto) {\n    return this.projectsService.update(+id, updateProyectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.projectsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\n\nProjectService\n\nProjectService\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/projects/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientOptions, ClientProxyFactory, Transport } from '@nestjs/microservices';\nimport { ProjectService } from './project.service';\nimport { ProjectController } from './project.controller';\nimport { ConfigService } from '@nestjs/config';\n\n\nconst connectionFactory =     {\n  provide: 'PROJECTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"PROJECTMSHOST\"),\n        port: _configService.get(\"PROJECTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n\n@Module({\n  controllers: [ProjectController],\n  providers: [ProjectService,\n    connectionFactory\n  ]\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/projects/project.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectsClient\n                                                  \n                                                        \n                                                                        ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProyectDto: CreateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/project.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProyectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/projects/project.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/project.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/project.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProyectDto: UpdateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/project.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProyectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\n\n@Injectable()\nexport class ProjectService {\n\n  constructor(\n    @Inject('PROJECTS') private readonly projectsClient: ClientProxy) {}\n\n  create(createProyectDto: CreateProjectDto) {\n    return 'This action adds a new project';\n  }\n\n  findAll() {\n    return `This action returns all projects`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} project`;\n  }\n\n  update(id: number, updateProyectDto: UpdateProjectDto) {\n    return `This action updates a #${id} project`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} project`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Talent.html":{"url":"classes/Talent.html","title":"class - Talent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Talent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/talents/entities/talent.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Talent {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TalentController.html":{"url":"controllers/TalentController.html","title":"controller - TalentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TalentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/talents/talent.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                talents\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTalentDto: CreateTalentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/talents/talent.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTalentDto\n                                    \n                                                CreateTalentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/talents/talent.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/talents/talent.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/talents/talent.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTalentDto: UpdateTalentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/talents/talent.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTalentDto\n                                    \n                                                UpdateTalentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TalentService } from './talent.service';\nimport { CreateTalentDto } from './dto/create-talent.dto';\nimport { UpdateTalentDto } from './dto/update-talent.dto';\n\n@Controller('talents')\nexport class TalentController {\n  constructor(private readonly talentsService: TalentService) {}\n\n  @Post()\n  create(@Body() createTalentDto: CreateTalentDto) {\n    return this.talentsService.create(createTalentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.talentsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.talentsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTalentDto: UpdateTalentDto) {\n    return this.talentsService.update(+id, updateTalentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.talentsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TalentModule.html":{"url":"modules/TalentModule.html","title":"module - TalentModule","body":"\n                   \n\n\n\n\n    Modules\n    TalentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TalentModule\n\n\n\ncluster_TalentModule_providers\n\n\n\n\nTalentService\n\nTalentService\n\n\n\nTalentModule\n\nTalentModule\n\nTalentModule -->\n\nTalentService->TalentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/talents/talent.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TalentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TalentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientOptions, ClientProxyFactory, Transport } from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\nimport { TalentService } from './talent.service';\nimport { TalentController } from './talent.controller';\n\n\nconst connectionFactory = {\n  provide: 'TALENTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"TALENTMSHOST\"),\n        port: _configService.get(\"TALENTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n\n\n@Module({\n  controllers: [TalentController],\n  providers: [TalentService,\n    connectionFactory  \n  ]\n})\nexport class TalentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TalentService.html":{"url":"injectables/TalentService.html","title":"injectable - TalentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TalentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/talents/talent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(talentsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/talents/talent.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        talentsClient\n                                                  \n                                                        \n                                                                        ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTalentDto: CreateTalentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/talents/talent.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTalentDto\n                                    \n                                                CreateTalentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/talents/talent.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/talents/talent.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/talents/talent.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateTalentDto: UpdateTalentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/talents/talent.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTalentDto\n                                    \n                                                UpdateTalentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { CreateTalentDto } from './dto/create-talent.dto';\nimport { UpdateTalentDto } from './dto/update-talent.dto';\n\n@Injectable()\nexport class TalentService {\n\n  constructor(\n    @Inject('TALENTS') private readonly talentsClient: ClientProxy) {}\n\n  create(createTalentDto: CreateTalentDto) {\n    return 'This action adds a new talent';\n  }\n\n  findAll() {\n    return `This action returns all talents`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} talent`;\n  }\n\n  update(id: number, updateTalentDto: UpdateTalentDto) {\n    return `This action updates a #${id} talent`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} talent`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClientDto.html":{"url":"classes/UpdateClientDto.html","title":"class - UpdateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/dto/update-client.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'noel@reviglio.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Noel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '54759eb3c090d83494e2d804'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Reviglio'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1234567890})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/update-client.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { CreateClientDto } from './create-client.dto';\n\nexport class UpdateClientDto extends PartialType(CreateClientDto) {\n\n    @ApiProperty({ example:'54759eb3c090d83494e2d804' })\n    id: string;\n\n    @ApiProperty({ example:'Noel' })\n    firstName: string;\n\n    @ApiProperty({ example:'Reviglio' })\n    lastName: string;\n\n    @ApiProperty({ example:'noel@reviglio.com' })\n    email: string;\n\n    @ApiProperty({ example:'image.jpg' })\n    image: string;\n\n    @ApiProperty({ example:1234567890 })\n    phoneNumber: number;\n\n    @ApiProperty({ example:true })\n    active: Boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProjectDto } from './create-project.dto';\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTalentDto.html":{"url":"classes/UpdateTalentDto.html","title":"class - UpdateTalentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTalentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/talents/dto/update-talent.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTalentDto } from './create-talent.dto';\n\nexport class UpdateTalentDto extends PartialType(CreateTalentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            loggerOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/clients/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/clients/client.module.ts\n            \n            variable\n            connectionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/clients/client.service.ts\n            \n            injectable\n            ClientService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/clients/dto/create-client.dto.ts\n            \n            class\n            CreateClientDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/clients/dto/update-client.dto.ts\n            \n            class\n            UpdateClientDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/clients/entities/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            documentationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            versioningOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/entities/project.entity.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/projects/project.module.ts\n            \n            variable\n            connectionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/talents/dto/create-talent.dto.ts\n            \n            class\n            CreateTalentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/talents/dto/update-talent.dto.ts\n            \n            class\n            UpdateTalentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/talents/entities/talent.entity.ts\n            \n            class\n            Talent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/talents/talent.controller.ts\n            \n            controller\n            TalentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/talents/talent.module.ts\n            \n            variable\n            connectionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/talents/talent.service.ts\n            \n            injectable\n            TalentService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^8.4.4\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            nest-winston : ^1.6.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            winston : ^3.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSe nos solicita el presente proyecto como culminación de proceso de capacitación en la tecnología serverside JavaScript. Describo los requerimientos funcionales y no funcionales que dan marco al proyecto: -Objetivos: Crear APIs para una empresa Software Factory que necesita acceder y persistir información de su negocio, para esto se pide generar una solución cloud native. Este necesita poder comprender los siguientes dominios de información:\nClients\nProjects\nTalents Las entidades son libres de modelar a modo de percepción personal\n-Criterios de Aceptación: ● Desarrollar 3 API 's REST que tengan expuestos endpoints para poder acceder a los requisitos de negocio. ● Desarrollar la arquitectura como Microservicios. ● Generar Unit test que con su coverage supere el 70%. ● Tiene que seguir los patrones SOLID. ● Se tiene que poder probar todo el workflow en ambiente local. ● Subir el código a un repositorio Github / Gitlab. ● Utilizar Conventional commits de Angular.\n-API's REST:\nClients: La API va a ser capaz de generar un CRUD sobre los Clients.\nProjects: La API va a ser capaz de generar un CRUD sobre los Projects.\nTalents La API va a ser capaz de generar un CRUD sobre los Talents.Consideraciones adicionales\nLos proyectos tienen estados [\"PENDING\", \"GOING\", \"SUSPENDED\", \"DONE\"]\nSe debe poder obtener el listado de proyectos por cliente\nSe debe poder obtener el listado de proyectos por estados\nSe debe poder obtener el listado de proyectos por cliente y estados\nPoder asignar los clientes a muchos proyectos\nValidar la cantidad de proyectos en GOING por Talent. ( fijar un porcentaje por proyecto )\nLas API 's deben ser REST compliance, generando error handling & mapping.\nObservabilidad es un nice to have.\nLas API con method DELETE tienen que hacer un borrado lógico en la persistencia.\n-Stack tecnológico:\nnodeJS v14.x\nNestJS\nServerless Framework\nServerless Offline\nJest\nnpm\nTypescriptArquitectura\n-Compute: Utilizaremos AWS Lambda Function para alojar y correr el código de nuestras API 's. Cada dominio utilizara una Lambda function\n-API Gateway: Utilizaremos AWS API Gateway V1 (REST) para exponer nuestras Lambdas con API 's REST.\n-Persistencia: Utilizaremos soluciones noSQL o SQL para persistir nuestro modelo de negocio.\nDynamoDB\nMongoDB\nMySQL\nPostgreSQL\n-Diseño de Componentes: Cada Lambda estará diseñada con nestJS como framework w/ Express como HTTP Server.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TalentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_TalentModule\n\n\n\ncluster_TalentModule_providers\n\n\n\n\nClientModule\n\nClientModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nTalentModule\n\nTalentModule\n\nAppModule -->\n\nTalentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nTalentService\n\nTalentService\n\nTalentModule -->\n\nTalentService->TalentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            connectionFactory   (src/.../client.module.ts)\n                        \n                        \n                            connectionFactory   (src/.../project.module.ts)\n                        \n                        \n                            connectionFactory   (src/.../talent.module.ts)\n                        \n                        \n                            documentationOptions   (src/.../main.ts)\n                        \n                        \n                            loggerOption   (src/.../app.module.ts)\n                        \n                        \n                            versioningOptions   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/clients/client.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'CLIENTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"CLIENTMSHOST\"),\n        port: _configService.get(\"CLIENTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n                    \n                \n\n\n        \n    \n\n    src/projects/project.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'PROJECTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"PROJECTMSHOST\"),\n        port: _configService.get(\"PROJECTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n                    \n                \n\n\n        \n    \n\n    src/talents/talent.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'TALENTS',\n  useFactory: (_configService: ConfigService) => {\n    const clientsOptions : ClientOptions = {\n      transport: Transport.TCP,\n      options: { \n        host : _configService.get(\"TALENTMSHOST\"),\n        port: _configService.get(\"TALENTMSPORT\"),\n      },\n    };\n    return ClientProxyFactory.create(clientsOptions);\n  },\n  inject: [ConfigService]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        documentationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder() \n                          .setTitle('Challenge NODEJS REST API')\n                          .setDescription('Challenge API REST en NodeJS propuesta por Darwoft.')\n                          .setVersion('1.0')\n                          .build()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        versioningOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     VersioningOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: VersioningType.URI,\n  defaultVersion: ['1'],\n}\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.LoggerOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  level: 'info', \n  format: winston.format.combine( \n    winston.format.timestamp({\n      format: 'YYYY-MM-DD HH:mm:ss',\n    }),\n    winston.format.errors({ stack: true }),\n    winston.format.splat(),\n    winston.format.json(),\n  ),\n  transports: [ \n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/debug/'),\n      filename: 'debug.log',\n      level: 'debug',\n    }),\n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/error/'),\n      filename: 'error.log',\n      level: 'error',\n    }),\n    new winston.transports.File({\n      dirname: path.join(__dirname, './../log/info/'),\n      filename: 'info.log',\n      level: 'info',\n    }),\n    new winston.transports.Console({ level: 'debug' }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
